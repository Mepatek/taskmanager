/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 12.1 		*/
/*  Created On : 15-kvì-2016 20:02:43 				*/
/*  DBMS       : SQL Server 2012 						*/
/* ---------------------------------------------------- */

/* Drop Foreign Key Constraints */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_TaskActions_Tasks]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [TaskActions] DROP CONSTRAINT [FK_TaskActions_Tasks]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_TaskConditions_Tasks]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [TaskConditions] DROP CONSTRAINT [FK_TaskConditions_Tasks]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[FK_TaskHistory_Tasks]') AND OBJECTPROPERTY(id, N'IsForeignKey') = 1) 
ALTER TABLE [TaskHistory] DROP CONSTRAINT [FK_TaskHistory_Tasks]
GO

/* Drop Tables */

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[TaskActions]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [TaskActions]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[TaskConditions]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [TaskConditions]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[TaskHistory]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [TaskHistory]
GO

IF EXISTS (SELECT 1 FROM dbo.sysobjects WHERE id = object_id(N'[Tasks]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1) 
DROP TABLE [Tasks]
GO

/* Create Tables */

CREATE TABLE [TaskActions]
(
	[TaskActionID] int NOT NULL IDENTITY (1, 1),
	[TaskID] int NULL,
	[Type] varchar(30) NOT NULL,    -- Type of Action: iTask - run class with iTask interface
	[Data] text NULL,    -- Different from Type:  iTask - class name
	[Order] int NOT NULL DEFAULT 1
)
GO

CREATE TABLE [TaskConditions]
(
	[TaskConditionID] int NOT NULL IDENTITY (1, 1),
	[TaskID] int NOT NULL,
	[Type] varchar(30) NOT NULL,
	[Data] text NULL,
	[Created] datetime NULL,
	[Expired] datetime NULL,
	[Active] bit NOT NULL DEFAULT 1
)
GO

CREATE TABLE [TaskHistory]
(
	[TaskHistoryID] int NOT NULL IDENTITY (1, 1),
	[TaskID] int NOT NULL,
	[Started] datetime NOT NULL,
	[Finished] datetime NULL,
	[ResultCode] int NULL,
	[User] varchar(150) NULL,
	[Output] text NULL
)
GO

CREATE TABLE [Tasks]
(
	[TaskID] int NOT NULL IDENTITY (1, 1),
	[Name] varchar(150) NOT NULL,
	[Created] datetime NOT NULL,
	[Source] varchar(255) NULL,
	[Author] varchar(100) NULL,
	[Description] text NULL,
	[DeleteAfterRun] bit NOT NULL DEFAULT 0,
	[MaxExecutionTimeInSecond] int NULL,
	[Disabled] bit NOT NULL DEFAULT 0,
	[State] int NOT NULL DEFAULT 0,    -- 0 = Idle 1 = Running 2 = Queued
	[ExceedDateTime] datetime NULL,
	[NextRun] datetime NULL,
	[LastRun] datetime NULL,
	[LastSuccess] int NULL,
	[Deleted] bit NOT NULL DEFAULT 0
)
GO

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE [TaskActions] 
 ADD CONSTRAINT [PK_TaskActions]
	PRIMARY KEY CLUSTERED ([TaskActionID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_TaskActions_Tasks] 
 ON [TaskActions] ([TaskID] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_TaskActions_Order] 
 ON [TaskActions] ([Order] ASC)
GO

ALTER TABLE [TaskConditions] 
 ADD CONSTRAINT [PK_TaskConditions]
	PRIMARY KEY CLUSTERED ([TaskConditionID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_TaskConditions_Tasks] 
 ON [TaskConditions] ([TaskID] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_TaskConditions_Type] 
 ON [TaskConditions] ([Type] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_TaskConditions_Active] 
 ON [TaskConditions] ([Active] ASC)
GO

ALTER TABLE [TaskHistory] 
 ADD CONSTRAINT [PK_TaskHistory]
	PRIMARY KEY CLUSTERED ([TaskHistoryID] ASC)
GO

CREATE NONCLUSTERED INDEX [IXFK_TaskHistory_Tasks] 
 ON [TaskHistory] ([TaskID] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_ResultCode] 
 ON [TaskHistory] ([ResultCode] ASC)
GO

ALTER TABLE [Tasks] 
 ADD CONSTRAINT [PK_Task]
	PRIMARY KEY CLUSTERED ([TaskID] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_Task_Name] 
 ON [Tasks] ([Name] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_Task_Deleted] 
 ON [Tasks] ([Deleted] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_Task_DeletedAfterRun] 
 ON [Tasks] ([DeleteAfterRun] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_Task_Running] 
 ON [Tasks] ([State] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_Task_NextRun] 
 ON [Tasks] ([NextRun] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_Task_Source] 
 ON [Tasks] ([Source] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_Task_Disabled] 
 ON [Tasks] ([Disabled] ASC)
GO

CREATE NONCLUSTERED INDEX [IDX_Task_LastSuccess] 
 ON [Tasks] ([LastSuccess] ASC)
GO

/* Create Foreign Key Constraints */

ALTER TABLE [TaskActions] ADD CONSTRAINT [FK_TaskActions_Tasks]
	FOREIGN KEY ([TaskID]) REFERENCES [Tasks] ([TaskID]) ON DELETE Cascade ON UPDATE Cascade
GO

ALTER TABLE [TaskConditions] ADD CONSTRAINT [FK_TaskConditions_Tasks]
	FOREIGN KEY ([TaskID]) REFERENCES [Tasks] ([TaskID]) ON DELETE Cascade ON UPDATE Cascade
GO

ALTER TABLE [TaskHistory] ADD CONSTRAINT [FK_TaskHistory_Tasks]
	FOREIGN KEY ([TaskID]) REFERENCES [Tasks] ([TaskID]) ON DELETE No Action ON UPDATE No Action
GO

/* Create Table Comments */

EXEC sp_addextendedproperty 'MS_Description', 'Type of Action: iTask - run class with iTask interface', 'Schema', [dbo], 'table', [TaskActions], 'column', [Type]
GO

EXEC sp_addextendedproperty 'MS_Description', 'Different from Type:  iTask - class name', 'Schema', [dbo], 'table', [TaskActions], 'column', [Data]
GO

EXEC sp_addextendedproperty 'MS_Description', '0 = Idle 1 = Running 2 = Queued', 'Schema', [dbo], 'table', [Tasks], 'column', [State]
GO
